#!/usr/bin/env python
# -*- coding: utf-8 -*-
# encoding: utf-8

"""
waf build script for Lighttpd 2.x
License and Copyright: see COPYING file
"""

import Options, sys


def configure(conf):
	pass


def build(bld):
	libs = ['glib', 'gthread', 'gmodule', 'ev']

	source = '''
		actions.c
		angel.c
		angel_fake.c
		chunk.c
		chunk_parser.c
		collect.c
		condition.c
		config_parser.rl
		connection.c
		environment.c
		etag.c
		filter_chunked.c
		filter_buffer_on_disk.c
		http_headers.c
		http_range_parser.rl
		http_request_parser.rl
		http_response_parser.rl
		lighttpd_glue.c
		lighttpd_worker.c
		log.c
		mimetype.c
		network.c
		network_sendfile.c
		network_write.c
		network_writev.c
		options.c
		pattern.c
		plugin.c
		plugin_core.c
		request.c
		response.c
		server.c
		stat_cache.c
		stream.c
		throttle.c
		url_parser.rl
		value.c
		virtualrequest.c
		worker.c
	'''

	if bld.env['WITH_PROFILER'] == 1:
		if sys.platform.startswith('freebsd'):
			libs += ['execinfo']
		source += '''
			profiler.c
		'''

	if bld.env['USE_LUA'] == 1:
		libs += ['lua']
		source += '''
			actions_lua.c
			condition_lua.c
			config_lua.c
			value_lua.c

			chunk_lua.c
			core_lua.c
			environment_lua.c
			filters_lua.c
			http_headers_lua.c
			physical_lua.c
			request_lua.c
			response_lua.c
			stat_lua.c
			subrequest_lua.c
			virtualrequest_lua.c
		'''

	libcommon = bld.new_task_gen(
		features = 'cc cprogram',
	 	source = source,
		defines = ['HAVE_CONFIG_H=1'],
		uselib = libs,
		uselib_local = ['common'],
		includes = ['#/include/'],
		target = 'lighttpd2-worker')
